{
  "openapi": "3.0.0",
  "info": {
    "title": "DealerSync API",
    "description": "API for DealerSync - Seamless Dealership Operations",
    "version": "1.0.0"
  },
  "servers": [
    { "url": "http://localhost:3000", "description": "Local development server" },
    { "url": "http://172.20.10.8:3000", "description": "Network development server" },
    { "url": "http://192.168.29.199:3000", "description": "Alternative network server" }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Login an employee",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "sales@test.com" },
                  "password": { "type": "string", "example": "test" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/admin/branches": {
      "post": {
        "summary": "Create a branch (Admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Downtown Showroom" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Branch created" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/admin/employees": {
      "post": {
        "summary": "Create an employee (Admin only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Jane Doe" },
                  "email": { "type": "string", "example": "jane@dealersync.com" },
                  "phone": { "type": "string", "example": "9876543210" },
                  "branch_id": { "type": "integer", "example": 1 },
                  "role": { "type": "string", "enum": ["sales", "accounts", "rto", "admin"], "example": "sales" },
                  "password": { "type": "string", "example": "password123" }
                },
                "required": ["name", "email", "phone", "branch_id", "role", "password"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Employee created" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/customers": {
      "post": {
        "summary": "Add a new customer (Sales only)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_name": { "type": "string", "example": "John Doe" },
                  "phone_number": { "type": "string", "example": "1234567890" },
                  "vehicle": { "type": "string", "example": "Toyota Camry" },
                  "variant": { "type": "string", "example": "LE", "nullable": true },
                  "color": { "type": "string", "example": "Blue", "nullable": true },
                  "price": { "type": "number", "example": 25000.00, "nullable": true }
                },
                "required": ["customer_name", "phone_number", "vehicle"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "customer": { "$ref": "#/components/schemas/Customer" },
                    "uniqueLink": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request" },
          "403": { "description": "Forbidden" }
        }
      },
      "get": {
        "summary": "Fetch customers (Sales see own, Admin see all)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Customers fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "customers": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Customer" }
                    }
                  }
                }
              }
            }
          },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "summary": "Fetch single customer details (Public)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 },
            "description": "The ID of the customer"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer details fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "customer": { "$ref": "#/components/schemas/Customer" }
                  }
                }
              }
            }
          },
          "404": { "description": "Customer not found" }
        }
      },
      "put": {
        "summary": "Update customer details (Customer partial submit, Sales updates price/status)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 },
            "description": "The ID of the customer to update"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": { "type": "string", "enum": ["Submitted", "Verified"], "example": "Verified", "nullable": true },
                  "dob": { "type": "string", "format": "date", "example": "1990-01-01", "nullable": true },
                  "address": { "type": "string", "example": "123 Main St", "nullable": true },
                  "mobile_1": { "type": "string", "example": "1234567890", "nullable": true },
                  "mobile_2": { "type": "string", "example": "0987654321", "nullable": true },
                  "email": { "type": "string", "example": "john.doe@example.com", "nullable": true },
                  "nominee": { "type": "string", "example": "Jane Doe", "nullable": true },
                  "nominee_relation": { "type": "string", "example": "Spouse", "nullable": true },
                  "payment_mode": { "type": "string", "example": "Finance", "nullable": true },
                  "finance_company": { "type": "string", "example": "XYZ Finance", "nullable": true },
                  "finance_amount": { "type": "number", "example": 20000.00, "nullable": true },
                  "aadhar_front": { "type": "string", "format": "binary", "nullable": true },
                  "aadhar_back": { "type": "string", "format": "binary", "nullable": true },
                  "passport_photo": { "type": "string", "format": "binary", "nullable": true },
                  "ex_showroom": { "type": "number", "example": 20000.00, "nullable": true },
                  "tax": { "type": "number", "example": 2000.00, "nullable": true },
                  "insurance": { "type": "number", "example": 1000.00, "nullable": true },
                  "booking_fee": { "type": "number", "example": 500.00, "nullable": true },
                  "accessories": { "type": "number", "example": 1500.00, "nullable": true }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer details updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "customer": { "$ref": "#/components/schemas/Customer" }
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request - Invalid data" },
          "403": { "description": "Forbidden - Unauthorized action" },
          "404": { "description": "Customer not found or not editable" }
        },
        "security": [
          { "bearerAuth": [] },
          {}
        ]
      }
    },
    "/customers/{id}/payments": {
      "put": {
        "summary": "Update customer payment amount (Sales only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 },
            "description": "The ID of the customer"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number", "example": 5000.00 }
                },
                "required": ["amount"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "customer": { "$ref": "#/components/schemas/Customer" }
                  }
                }
              }
            }
          },
          "400": { "description": "Bad request - Invalid amount" },
          "403": { "description": "Forbidden - Unauthorized" },
          "404": { "description": "Customer not found" }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/customers/{id}/{imageType}": {
      "get": {
        "summary": "Fetch customer image (Sales/Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 },
            "description": "The ID of the customer"
          },
          {
            "name": "imageType",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "enum": ["aadhar_front", "aadhar_back", "passport_photo"], "example": "aadhar_front" },
            "description": "The type of image to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Image fetched successfully",
            "content": {
              "image/png": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          },
          "400": { "description": "Bad request - Invalid image type" },
          "403": { "description": "Forbidden - Unauthorized" },
          "404": { "description": "Image not found" }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/public/customers/{id}": {
      "get": {
        "summary": "Get customer details by ID (Public endpoint - No auth required)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 },
            "description": "The ID of the customer to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer details fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customer": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "customer_name": { "type": "string", "example": "John Doe" },
                        "phone_number": { "type": "string", "example": "1234567890" },
                        "vehicle": { "type": "string", "example": "Model X" },
                        "variant": { "type": "string", "example": "Standard" },
                        "color": { "type": "string", "example": "Red" },
                        "price": { "type": "number", "example": 25000.00 },
                        "created_at": { "type": "string", "format": "date-time" },
                        "created_by": { "type": "integer", "example": 1 },
                        "created_by_name": { "type": "string", "example": "Sales Person" },
                        "status": { "type": "string", "example": "Pending" },
                        "dob": { "type": "string", "format": "date", "example": "1990-01-01" },
                        "address": { "type": "string", "example": "123 Main St" },
                        "mobile_1": { "type": "string", "example": "1234567890" },
                        "mobile_2": { "type": "string", "example": "0987654321" },
                        "email": { "type": "string", "example": "john.doe@example.com" },
                        "nominee": { "type": "string", "example": "Jane Doe" },
                        "nominee_relation": { "type": "string", "example": "Spouse" },
                        "payment_mode": { "type": "string", "example": "Finance" },
                        "finance_company": { "type": "string", "example": "XYZ Finance" },
                        "finance_amount": { "type": "number", "example": 20000.00 },
                        "amount_paid": { "type": "number", "example": 5000.00 },
                        "ex_showroom": { "type": "number", "example": 20000.00 },
                        "tax": { "type": "number", "example": 2000.00 },
                        "insurance": { "type": "number", "example": 1000.00 },
                        "booking_fee": { "type": "number", "example": 500.00 },
                        "accessories": { "type": "number", "example": 1500.00 },
                        "total_price": { "type": "number", "example": 25000.00 },
                        "aadhar_front_base64": { "type": "string", "example": "base64_encoded_image" },
                        "aadhar_back_base64": { "type": "string", "example": "base64_encoded_image" },
                        "passport_photo_base64": { "type": "string", "example": "base64_encoded_image" },
                        "front_delivery_photo_base64": { "type": "string", "example": "base64_encoded_image" },
                        "back_delivery_photo_base64": { "type": "string", "example": "base64_encoded_image" },
                        "delivery_photo_base64": { "type": "string", "example": "base64_encoded_image" }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": { "description": "Customer not found" },
          "500": { "description": "Server error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Customer": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "customer_name": { "type": "string" },
          "phone_number": { "type": "string" },
          "vehicle": { "type": "string" },
          "variant": { "type": "string", "nullable": true },
          "color": { "type": "string", "nullable": true },
          "price": { "type": "number", "nullable": true },
          "created_at": { "type": "string", "format": "date-time" },
          "created_by": { "type": "integer" },
          "status": { "type": "string", "enum": ["Pending", "Submitted", "Verified"], "example": "Pending" },
          "dob": { "type": "string", "format": "date", "nullable": true },
          "address": { "type": "string", "nullable": true },
          "mobile_1": { "type": "string", "nullable": true },
          "mobile_2": { "type": "string", "nullable": true },
          "email": { "type": "string", "nullable": true },
          "nominee": { "type": "string", "nullable": true },
          "nominee_relation": { "type": "string", "nullable": true },
          "payment_mode": { "type": "string", "nullable": true },
          "finance_company": { "type": "string", "nullable": true },
          "finance_amount": { "type": "number", "nullable": true },
          "amount_paid": { "type": "number", "example": 0.00, "nullable": true },
          "ex_showroom": { "type": "number", "example": 20000.00, "nullable": true },
          "tax": { "type": "number", "example": 2000.00, "nullable": true },
          "insurance": { "type": "number", "example": 1000.00, "nullable": true },
          "booking_fee": { "type": "number", "example": 500.00, "nullable": true },
          "accessories": { "type": "number", "example": 1500.00, "nullable": true },
          "total_price": { "type": "number", "example": 25000.00, "nullable": true }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}